<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lijunjie.tmall.dao.CategoryMapper">
	<!--类别和产品是一对多的关系 -->
	<resultMap type="Category" id="categoryBean">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<collection property="products" column="id"
			ofType="Product" select="queryProductsByCid"></collection>
	</resultMap>
	<!--查询所有类别 -->
	<select id="queryAllCategories" resultMap="categoryBean">
		select * from category
	</select>
	
	
	<!-- 通过类别id查询对应的多个产品 -->
	<select id="queryProductsByCid" resultMap="productBean">
		select * from product
		p where p.cid = #{cid}
	</select>

	<resultMap type="Product" id="productBean">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="subTitle" column="subTitle"/>
		<result property="originalPrice" column="originalPrice"/>
		<result property="promotePrice" column="promotePrice"/>
		<result property="stock" column="stock"/>
		<result property="datetime" column="datetime"/>
		<association property="firstProductImage" column="id" select="queryFirstProductImageByPid"></association>
		<collection property="reviews" column="id" select="com.lijunjie.tmall.dao.ProductMapper.queryReviewsByPid"></collection>
	</resultMap>
	
	<select id="queryFirstProductImageByPid" resultType="ProductImage">
		select * from productimage where pid = #{pid} and type = 'type_single' limit 0,1
	</select>
	
	
	
	
	
	<!-- 后台 -->
	 <resultMap id="BaseResultMap" type="com.lijunjie.tmall.bean.Category">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
    </resultMap>
    
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name
    </sql>
    <select id="selectByExample" parameterType="com.lijunjie.tmall.bean.CategoryExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from category
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>


    <select id="selectByPrimaryKey" parameterType="java.lang.Integer"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from category
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from category
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lijunjie.tmall.bean.Category"
            useGeneratedKeys="true">
        insert into category (name)
        values (#{name,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lijunjie.tmall.bean.Category"
            useGeneratedKeys="true">
        insert into category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lijunjie.tmall.bean.Category">
        update category
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lijunjie.tmall.bean.Category">
        update category
        set name = #{name,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>