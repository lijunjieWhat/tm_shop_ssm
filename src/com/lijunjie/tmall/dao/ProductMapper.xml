<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lijunjie.tmall.dao.ProductMapper">

	<select id="queryProductById" resultMap="productBean">
		select * from product
		where id = #{pid}
	</select>

	<resultMap type="Product" id="productBean">
		<id property="id" column="id" />
		<association property="category" column="cid"
			select="queryCategoryBycid"></association>
		<association property="firstProductImage" column="id"
			select="com.lijunjie.tmall.dao.CategoryMapper.queryFirstProductImageByPid"></association>

		<collection property="productSingleImages" column="id"
			select="querySingleImageById">
		</collection>
		<collection property="productDetailImages" column="id"
			select="queryDetailImageById"></collection>

		<collection property="reviews" column="id"
			select="queryReviewsByPid"></collection>

	</resultMap>
	<select id="queryCategoryBycid" resultType="category">
		select * from
		category where id = #{cid}
	</select>

	<select id="querySingleImageById" resultType="ProductImage">
		select * from
		ProductImage where pid = #{id} and type = 'type_single'
	</select>

	<select id="queryDetailImageById" resultType="ProductImage">
		select * from
		ProductImage where pid = #{id} and type = 'type_detail'
	</select>
	<!-- 查询出产品对应的评论 关联出对应的user -->
	<select id="queryReviewsByPid" resultMap="reviewBeanUser">
		SELECT * FROM review
		where pid = #{pid}
	</select>

	<resultMap type="review" id="reviewBeanUser">
		<id property="id" column="id" />
		<association property="user" column="uid"
			select="queryUserByUid"></association>
	</resultMap>
	<select id="queryUserByUid" resultType="user">
		select * from user where
		id = #{uid}
	</select>

	<!-- mohu -->
	<select id="search" resultMap="productBean">
		select *from product where name like concat('%',#{keyword},'%')
	</select>

	<!-- 后台 -->
	<resultMap id="BaseResultMap"
		type="com.lijunjie.tmall.bean.Product">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="subTitle" jdbcType="VARCHAR"
			property="subTitle" />
		<result column="originalPrice" jdbcType="REAL"
			property="originalPrice" />
		<result column="promotePrice" jdbcType="REAL"
			property="promotePrice" />
		<result column="stock" jdbcType="INTEGER" property="stock" />

		<result column="createDate" jdbcType="VARCHAR"
			property="createDate" />
		<association property="category" column="cid"
			select="queryCategoryBycid"></association>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, subTitle, originalPrice, promotePrice, stock, cid, createDate
	</sql>
	<select id="selectByExample"
		parameterType="com.lijunjie.tmall.bean.ProductExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from product
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from product
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" keyColumn="id" keyProperty="id"
		parameterType="com.lijunjie.tmall.bean.Product"
		useGeneratedKeys="true">
		insert into product (name, subTitle, originalPrice,
		promotePrice, stock, cid,
		createDate)
		values (#{name,jdbcType=VARCHAR}, #{subTitle,jdbcType=VARCHAR},
		#{originalPrice,jdbcType=REAL},
		#{promotePrice,jdbcType=REAL}, #{stock,jdbcType=INTEGER}, #{category.id,jdbcType=INTEGER},
		#{createDate,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" keyColumn="id" keyProperty="id"
		parameterType="com.lijunjie.tmall.bean.Product"
		useGeneratedKeys="true">
		insert into product
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="subTitle != null">
				subTitle,
			</if>
			<if test="originalPrice != null">
				originalPrice,
			</if>
			<if test="promotePrice != null">
				promotePrice,
			</if>
			<if test="stock != null">
				stock,
			</if>
			<if test="category.id != null">
				cid,
			</if>
			<if test="createDate != null">
				createDate,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="subTitle != null">
				#{subTitle,jdbcType=VARCHAR},
			</if>
			<if test="originalPrice != null">
				#{originalPrice,jdbcType=REAL},
			</if>
			<if test="promotePrice != null">
				#{promotePrice,jdbcType=REAL},
			</if>
			<if test="stock != null">
				#{stock,jdbcType=INTEGER},
			</if>
			<if test="category.id != null">
				#{category.id,jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.lijunjie.tmall.bean.Product">
		update product
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="subTitle != null">
				subTitle = #{subTitle,jdbcType=VARCHAR},
			</if>
			<if test="originalPrice != null">
				originalPrice = #{originalPrice,jdbcType=REAL},
			</if>
			<if test="promotePrice != null">
				promotePrice = #{promotePrice,jdbcType=REAL},
			</if>
			<if test="stock != null">
				stock = #{stock,jdbcType=INTEGER},
			</if>
			<if test="category.id != null">
				cid = #{category.id,jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				createDate = #{createDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.lijunjie.tmall.bean.Product">
		update product
		set name = #{name,jdbcType=VARCHAR},
		subTitle = #{subTitle,jdbcType=VARCHAR},
		originalPrice = #{originalPrice,jdbcType=REAL},
		promotePrice = #{promotePrice,jdbcType=REAL},
		stock = #{stock,jdbcType=INTEGER},
		cid = #{category.id,jdbcType=INTEGER},
		createDate = #{createDate,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>